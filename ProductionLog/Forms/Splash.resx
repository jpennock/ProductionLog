<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/+EAFkV4aWYAAE1NACoAAAAIAAAAAAAA
        /+wAEUR1Y2t5AAEABAAAAEYAAP/hA4BodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tl
        dCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHht
        bG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MSA2NC4x
        NDA5NDksIDIwMTAvMTIvMDctMTA6NTc6MDEgICAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJo
        dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlw
        dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9t
        bS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VS
        ZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFs
        RG9jdW1lbnRJRD0ieG1wLmRpZDo2RTM3RDcyMjFGQjlERTExODM4MEIzMjg3Mzk4MDc5RSIgeG1wTU06
        RG9jdW1lbnRJRD0ieG1wLmRpZDpENDFGOTUyQTJFOEYxMUU0ODIyNUNBNEU5QUYyQzg5RiIgeG1wTU06
        SW5zdGFuY2VJRD0ieG1wLmlpZDpENDFGOTUyOTJFOEYxMUU0ODIyNUNBNEU5QUYyQzg5RiIgeG1wOkNy
        ZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1LjEgV2luZG93cyI+DQoJCQk8eG1wTU06RGVyaXZl
        ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpGNjI2QTM1NzhGMkVFNDExODA3OENBNzY5OTE2
        MjRDQSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo2RTM3RDcyMjFGQjlERTExODM4MEIzMjg3Mzk4
        MDc5RSIvPg0KCQk8L3JkZjpEZXNjcmlwdGlvbj4NCgk8L3JkZjpSREY+DQo8L3g6eG1wbWV0YT4NCjw/
        eHBhY2tldCBlbmQ9J3cnPz7/2wBDAAQDAwMDAwQDAwQGBAMEBgcFBAQFBwgGBgcGBggKCAkJCQkICgoM
        DAwMDAoMDA0NDAwRERERERQUFBQUFBQUFBT/2wBDAQQFBQgHCA8KCg8UDg4OFBQUFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACoAVIDAREAAhEBAxEB/8QAHQAB
        AAIBBQEAAAAAAAAAAAAAAAgJBwIDBAUGAf/EAFMQAAEDAwIDBAIMBgwPAQAAAAEAAgMEBQYRByESCDFR
        ExRBImFxgZHBMpIjtBV1CVJy0rM3OKGx0UJigrIzJFWVFvDhQ1Njg5NEhJQltWZ2Fxj/xAAVAQEBAAAA
        AAAAAAAAAAAAAAAAAv/EABURAQEAAAAAAAAAAAAAAAAAAAAR/9oADAMBAAIRAxEAPwCv9AQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBB2rMbyG
        WGOpitNZJTzAOimZTSuY5p7C0huhBQfRjGSE6CzVxPd5aX8lBvDDsvPZYLif+Dn/ACEHWVdFWUEvg1tP
        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
        zw1o0a3mOgHscUHzzlT/AJ5/yig+SVM8oAlkdJyfE5nE6a9yDa19hB95u4INxtVUMAayR4YOxocdEB9T
        NIOR8j3M7eUuJCAypmjHLHI5je3QOICDQZXvdzvJLzxLyTqg3fO1J7ZpPlFBtvmkkOsjy89mriTwQa21
        U7AGtkeGDsaHHRBodM97ud5Ln/hE8UGueqnqZnVFTI+WoedXyvcXvJ7yXalB989Va6iaT5Z+DRBtvmfK
        7nlJe7vJ1P7OqDcFbUtADJXgD4vrkaae1og0OlJdzv4uJ1J11Ovu6oNfnqrXXxpPln4NEGh875TzykyO
        7NXHU/s6oNUdXNCCIHujB7Q1xGvydEGrz9T6ZZPln4dUH36wqh8SaUf6w/Boqo1C6Vw/3mb3JHfCSlHH
        Mvp04nt4/uaJRrZVSxgta9zGniQxxH7qUavrCpHxZZB/HPwaKRpkrJ5hpPI+QDiA5xd/K1QI6mSLXwiW
        a9vKSP2tFVB9XLKAJnukA4gOcT+3qlGnxR6B/h7gCUcia5V1RTxUdRPLJSQEmCndI58cZdwPK1xIHZ6E
        o44mLHB8erXDiHA6Ee9olG6LhU+mWT5bvh1SjTJWTSjlke547nOJSjb8XvH7P7uqUfHPDhoBp73wAINt
        SCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgIP/Z
</value>
  </data>
</root>